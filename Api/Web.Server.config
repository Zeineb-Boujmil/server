<?xml version="1.0" encoding="utf-8"?>

<!-- For more information on using web.config transformation visit https://go.microsoft.com/fwlink/?LinkId=125889 -->

<configuration xmlns:xdt="http://schemas.microsoft.com/XML-Document-Transform">

	<appSettings>
		<add key="SharedSecret" value="__SharedSecret__" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
		<add key="AudienceUri" value="__AudienceUri__" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
		<add key="TokenIssuerId" value="__TokenIssuerId__" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
	</appSettings>

	<system.web>
		<compilation xdt:Transform="RemoveAttributes(debug)" />
	</system.web>

	<connectionStrings>
		<add name="MasterDataContext"
         connectionString="__MasterDataContextConnectionString__"
         xdt:Transform="SetAttributes" xdt:Locator="Match(name)" />
		<add name="LogContext" connectionString="metadata=res://*/LogContext.csdl|res://*/LogContext.ssdl|res://*/LogContext.msl;provider=System.Data.SqlClient;provider connection string=&quot;__LogDatabaseConnectionString__;MultipleActiveResultSets=True;App=EntityFramework&quot;" providerName="System.Data.EntityClient" />
	</connectionStrings>

	<system.serviceModel>
		<bindings>
			<basicHttpBinding>
				<binding name="BasicHttpBinding_IPostcodeCheckService" sendTimeout="00:00:02">
					<security mode="Transport">
						<transport clientCredentialType="Certificate" />
					</security>
				</binding>
				<binding name="BasicHttpBinding_IbanService" sendTimeout="00:00:02">
					<security mode="Transport">
						<transport clientCredentialType="Certificate" />
					</security>
				</binding>
				<binding name="BasicHttpBinding_IDmsService" sendTimeout="00:00:05">
					<security mode="Transport">
						<transport clientCredentialType="Certificate" />
					</security>
				</binding>
				<binding name="BasicHttpBinding_NumberingService" sendTimeout="00:00:15">
					<security mode="Transport">
						<transport clientCredentialType="Certificate" />
					</security>
				</binding>
			</basicHttpBinding>
			<wsHttpBinding>
				<binding name="WSHttpBinding_ITwoWayAsync" sendTimeout="00:00:05">
					<security mode="Transport">
						<transport clientCredentialType="Certificate" />
					</security>
				</binding>
				<binding name="WSHttpBinding_VatNumberCheckService" sendTimeout="00:00:05">
					<security mode="Transport">
						<transport clientCredentialType="Certificate" />
					</security>
				</binding>
			</wsHttpBinding>
		</bindings>
		<behaviors>
			<endpointBehaviors>
				<behavior name="ClientBehaviour_MD">
					<clientCredentials>
						<clientCertificate findValue="__AllowedCertificateThumbprint__" x509FindType="FindByThumbprint" xdt:Transform="SetAttributes(findValue)" />
						<serviceCertificate>
							<authentication certificateValidationMode="PeerTrust"/>
						</serviceCertificate>
					</clientCredentials>
				</behavior>
			</endpointBehaviors>
		</behaviors>
		<client>
			<endpoint address="__PostCodeCheckServiceAddress__"
                behaviorConfiguration="ClientBehaviour_MD" binding="basicHttpBinding"
                bindingConfiguration="BasicHttpBinding_IPostcodeCheckService"
                contract="PostcodeCheckService.IPostcodeCheckService" name="BasicHttpBinding_IPostcodeCheckService"
                xdt:Transform="SetAttributes(address)" xdt:Locator="Match(contract)" />
			<endpoint address="__IbanServiceAddress__"
                behaviorConfiguration="ClientBehaviour_MD" binding="basicHttpBinding"
                bindingConfiguration="BasicHttpBinding_IbanService" contract="IbanService.IbanService"
                name="BasicHttpBinding_IbanService"
                xdt:Transform="SetAttributes(address)" xdt:Locator="Match(contract)" />
			<endpoint address="__CedCocIntegrationServiceAddress__"
                binding="wsHttpBinding" bindingConfiguration="WSHttpBinding_ITwoWayAsync"
                contract="KvkValidatorService.WcfService_Ced_Coc_Integration"
                behaviorConfiguration="ClientBehaviour_MD"
                name="WSHttpBinding_ITwoWayAsync"
                xdt:Transform="SetAttributes(address)" xdt:Locator="Match(contract)" />
			<endpoint address="__VatNumberCheckServiceAddress__"
                behaviorConfiguration="ClientBehaviour_MD"
                binding="wsHttpBinding" bindingConfiguration="WSHttpBinding_VatNumberCheckService"
                contract="VatNumberCheckService.WcfService_Ced_VatNumberCheck"
                name="WSHttpBinding_ITwoWayAsync"
                xdt:Transform="SetAttributes(address)" xdt:Locator="Match(contract)" />
			<endpoint address="__DmsServiceAddress__"
                behaviorConfiguration="ClientBehaviour_MD" binding="basicHttpBinding"
                bindingConfiguration="BasicHttpBinding_IDmsService" contract="DmsService.IDmsService"
                name="BasicHttpBinding_IDmsService"
                xdt:Transform="SetAttributes(address)" xdt:Locator="Match(contract)"/>
			<endpoint address="__NumberingServiceAddress__"
                behaviorConfiguration="ClientBehaviour_MD" binding="basicHttpBinding"
                bindingConfiguration="BasicHttpBinding_NumberingService" contract="NumberingService.NumberingService"
                name="BasicHttpBinding_NumberingService"
                xdt:Transform="SetAttributes(address)" xdt:Locator="Match(contract)"/>
		</client>
	</system.serviceModel>
  
  <serviceBusSettings xdt:Transform="Replace">
    <serviceBusTopicSettings>
      <add name="Service" serviceBusNamespace="__AzureServiceBusNamespace__" sasKeyName="__ServiceTopicSasKeyName__" sasKeyValue="__ServiceTopicSasKeyValue__" topicName="__ServiceTopicName__" />
      <add name="Creditor" serviceBusNamespace="__AzureServiceBusNamespace__" sasKeyName="__CreditorTopicSasKeyName__" sasKeyValue="__CreditorTopicSasKeyValue__" topicName="__CreditorTopicName__" />
    </serviceBusTopicSettings>
  </serviceBusSettings>

</configuration>