//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataAccess
{
    using System;
    using System.Collections.Generic;
    
    public partial class OrganizationUnit : Interfaces.IIdentifiable<Guid>, Interfaces.ITrackable
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public OrganizationUnit()
        {
            this.OrganizationHierarchies = new HashSet<OrganizationHierarchy>();
            this.OrganizationAccounts = new HashSet<OrganizationAccount>();
            this.Products = new HashSet<Product>();
            this.HandlingCountriesAsDepartment = new HashSet<HandlingCountry>();
            this.HandlingCountriesAsLegalEntity = new HashSet<HandlingCountry>();
            this.SubContractsAsDepartment = new HashSet<SubContract>();
            this.SubContractsAsLegalEntity = new HashSet<SubContract>();
            this.OrganizationCodes = new HashSet<OrganizationCode>();
            this.ContactPersons = new HashSet<ContactPerson>();
            this.ValidationStatusHistories = new HashSet<OrganizationUnitValidationStatusHistory>();
            this.BusinessHours = new HashSet<BusinessHour>();
            this.TimeWindowLists = new HashSet<TimeWindowList>();
            this.OrganizationContacts = new HashSet<OrganizationContact>();
            this.OrganizationAddresses = new HashSet<OrganizationAddress>();
            this.OrganizationNotes = new HashSet<OrganizationNote>();
            this.OrganizationLabels = new HashSet<OrganizationLabel>();
            this.OrganizationApplications = new HashSet<OrganizationApplication>();
            this.OrganizationTaxCodes = new HashSet<OrganizationTaxCode>();
            this.OrganizationVatValidations = new HashSet<OrganizationVatValidation>();
            this.ClientInvoiceRecipients = new HashSet<ClientInvoiceRecipient>();
            this.CreditorOrganizationRelations = new HashSet<CreditorOrganizationRelation>();
            this.OrganizationPaymentConditions = new HashSet<OrganizationPaymentCondition>();
            this.OrganizationPaymentMethods = new HashSet<OrganizationPaymentMethod>();
            this.DebtorOrganizationRelations = new HashSet<DebtorOrganizationRelation>();
            this.CoverageProducts = new HashSet<CoverageProduct>();
            this.OrganizationCoverageProducts = new HashSet<OrganizationCoverageProduct>();
            this.OrganizationCoverageProductsExtensions = new HashSet<OrganizationCoverageProductsExtension>();
            this.OrganizationCoverageProductsExtensions1 = new HashSet<OrganizationCoverageProductsExtension>();
        }
    
        public System.Guid Id { get; set; }
        public byte[] TimeStamp { get; set; }
        public string Code { get; set; }
        public string ShortName { get; set; }
        public string LongName { get; set; }
        public string PorCode { get; set; }
        public Nullable<System.DateTime> StartDate { get; set; }
        public Nullable<System.DateTime> EndDate { get; set; }
        public bool Inactive { get; set; }
        public Nullable<System.Guid> OrganizationTypeId { get; set; }
        public Nullable<System.Guid> HierarchyTypeId { get; set; }
        public Nullable<System.Guid> AddressId { get; set; }
        public Nullable<System.Guid> PostOfficeBoxId { get; set; }
        public Nullable<System.Guid> OrganizationGroupId { get; set; }
        public Nullable<System.Guid> CollectionCodeId { get; set; }
        public string Website { get; set; }
        public string Email { get; set; }
        public string VatNumber { get; set; }
        public string ChamberOfCommerceNumber { get; set; }
        public System.DateTime CreatedDate { get; set; }
        public string CreatedBy { get; set; }
        public System.DateTime LastModifiedDate { get; set; }
        public string LastModifiedBy { get; set; }
        public string Phone { get; set; }
        public Nullable<System.Guid> TenantId { get; set; }
        public string SalesTaxCodeId { get; set; }
        public string PurchaseTaxCodeId { get; set; }
        public string Fax { get; set; }
        public string LongName2 { get; set; }
        public string LongName3 { get; set; }
        public bool NoVatNumber { get; set; }
        public bool IsTaxExempted { get; set; }
        public string TaxExemptNumber { get; set; }
        public string VatCountryCode { get; set; }
    
        public virtual CollectionCode CollectionCode { get; set; }
        public virtual OrganizationType OrganizationType { get; set; }
        public virtual Tenant Tenant { get; set; }
        public virtual OrganizationGroup OrganizationGroup { get; set; }
        public virtual HierarchyType HierarchyType { get; set; }
        public virtual Address Address { get; set; }
        public virtual PostOfficeBox PostOfficeBox { get; set; }
        public virtual Agent Agent { get; set; }
        public virtual Client Client { get; set; }
        public virtual Partner Partner { get; set; }
        public virtual Repairer Repairer { get; set; }
        public virtual Supplier Supplier { get; set; }
        public virtual OrganizationHierarchy OrganizationHierarchy { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<OrganizationHierarchy> OrganizationHierarchies { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<OrganizationAccount> OrganizationAccounts { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Product> Products { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<HandlingCountry> HandlingCountriesAsDepartment { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<HandlingCountry> HandlingCountriesAsLegalEntity { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<SubContract> SubContractsAsDepartment { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<SubContract> SubContractsAsLegalEntity { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<OrganizationCode> OrganizationCodes { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ContactPerson> ContactPersons { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<OrganizationUnitValidationStatusHistory> ValidationStatusHistories { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<BusinessHour> BusinessHours { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<TimeWindowList> TimeWindowLists { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<OrganizationContact> OrganizationContacts { get; set; }
        public virtual BusinessUnit BusinessUnit { get; set; }
        public virtual Department Department { get; set; }
        public virtual FiscalEntity FiscalEntity { get; set; }
        public virtual LegalEntity LegalEntity { get; set; }
        public virtual AlarmCenter AlarmCenter { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<OrganizationAddress> OrganizationAddresses { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<OrganizationNote> OrganizationNotes { get; set; }
        public virtual InternationalAssistanceGroup InternationalAssistanceGroup { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<OrganizationLabel> OrganizationLabels { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<OrganizationApplication> OrganizationApplications { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<OrganizationTaxCode> OrganizationTaxCodes { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<OrganizationVatValidation> OrganizationVatValidations { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ClientInvoiceRecipient> ClientInvoiceRecipients { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<CreditorOrganizationRelation> CreditorOrganizationRelations { get; set; }
        public virtual Insurer Insurer { get; set; }
        public virtual Mandate Mandate { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<OrganizationPaymentCondition> OrganizationPaymentConditions { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<OrganizationPaymentMethod> OrganizationPaymentMethods { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<DebtorOrganizationRelation> DebtorOrganizationRelations { get; set; }
        public virtual ContractParty ContractParty { get; set; }
        public virtual ConvenantParty ConvenantParty { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<CoverageProduct> CoverageProducts { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<OrganizationCoverageProduct> OrganizationCoverageProducts { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<OrganizationCoverageProductsExtension> OrganizationCoverageProductsExtensions { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<OrganizationCoverageProductsExtension> OrganizationCoverageProductsExtensions1 { get; set; }
        public virtual RoadAuthority RoadAuthority { get; set; }
        public virtual LeasingCompany LeasingCompany { get; set; }
        public virtual Bank Bank { get; set; }
    }
}
